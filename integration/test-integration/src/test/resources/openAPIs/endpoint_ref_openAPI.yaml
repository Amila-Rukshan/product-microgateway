openapi: "3.0.0"
info:
  version: 1.0.0
  title: Petstore Endpoint Reference
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: http://mockBackend:2383/v3
x-wso2-basePath: /v2/ref
x-wso2-endpoints:
  - prod:
      urls:
        - http://mockBackend:2383/v2
  - myEndpoint:
      urls:
        - http://mockBackend:2390/v2
x-wso2-production-endpoints: "#/x-wso2-endpoints/prod"
x-wso2-sandbox-endpoints: "#/x-wso2-endpoints/myEndpoint"
paths:
  /pet/findByStatus:
    get:
      summary: Info for a specific pet
      operationId: showPetById
      tags:
        - pets
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /pets/findByTags:
#    x-wso2-sandbox-endpoints: "#/x-wso2-endpoints/prod"
    get:
      tags:
        - pet
      summary: Finds Pets by tags
      description: 'Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.'
      operationId: findPetsByTags
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
        '400':
          description: Invalid tag value
components:
  schemas:
    Pet:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
    Pets:
      type: array
      items:
        $ref: "#/components/schemas/Pet"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
