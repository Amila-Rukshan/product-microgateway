openapi: "3.0.0"
info:
  version: 1.0.0
  title: mockApiTest
  license:
    name: MIT
servers:
  - url: /
x-wso2-basePath: /mockApiTest/1.0.0
paths:
  /testMockApiWithHeader:
    get:
      summary: Tests Choreo Connect mock API implementation
      operationId: testImpl
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Data"
              example:
                name: choreo connect
            application/xml:
              example: "<name>choreo connect</name>"
          headers:
            x-wso2-header1:
              schema:
                type: string
              example: Sample header value
      security:
        - APIKeyAuth: [ ]
  /testMockWithQueryParam:
    get:
      summary: Tests Choreo Connect mock API implementation with query parameters
      operationId: testImpl2
      responses:
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Data"
              example:
                name: choreo connect
            application/xml:
              example: "<name>choreo connect</name>"
          headers:
            x-wso2-q-header:
              schema:
                type: string
              example: Header value for query param
      security:
        - APIKeyAuth: [ ]
  /testMockDefault:
    get:
      summary: Tests Choreo Connect mock default API implementation
      operationId: testImpl3
      responses:
        '200':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Data"
              example:
                name: choreo connect
          headers:
            x-wso2-default-header:
              schema:
                type: string
              example: Default header value
      security:
        - APIKeyAuth: []
components:
  securitySchemes:
    APIKeyAuth:
      type: apiKey
      name: x-api-key
      in: header
  schemas:
    Data:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
