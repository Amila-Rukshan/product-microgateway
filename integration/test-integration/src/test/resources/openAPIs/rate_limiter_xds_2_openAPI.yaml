openapi: "3.0.0"
info:
  version: 1.0.0
  title: Rate Limiter xDS 2 Test
  license:
    name: MIT
servers:
  - url: http://mockBackend:2383/v2
x-wso2-basePath: /rate-limiter-xds-2-test
paths:
  /pet:
    get:
      summary: Get list of pets
      operationId: getPets
      tags:
        - pet
      responses:
        '200':
          description: List of pets
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pets"
    post:
      summary: Add new pet
      operationId: addPet
      tags:
        - pet
      requestBody:
        content:
          application/json:
            schema:
              '$ref': "#/components/schemas/Pet"
      responses:
        '201':
          description: New pet
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"

  /pet/{petId}:
    get:
      summary: Info for a specific pet
      parameters:
        - name: petId
          in: path
          required: true
          description: The id of the pet to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
    delete:
      summary: Delete a specific pet
      parameters:
        - name: petId
          in: path
          required: true
          description: The id of the pet to delete
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"

  /pet/findByStatus:
    get:
      summary: Info for a specific pet
      operationId: showPetById
      tags:
        - pets
      parameters:
        - name: petId
          in: path
          required: true
          description: The id of the pet to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
components:
  schemas:
    Pet:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
    Pets:
      type: array
      items:
        $ref: "#/components/schemas/Pet"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
