// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: wso2/discovery/config/enforcer/soap.proto

package org.wso2.choreo.connect.discovery.config.enforcer;

public final class soapProto {
  private soapProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_wso2_discovery_config_enforcer_Soap_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_wso2_discovery_config_enforcer_Soap_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n)wso2/discovery/config/enforcer/soap.pr" +
      "oto\022\036wso2.discovery.config.enforcer\")\n\004S" +
      "oap\022!\n\031soapErrorXmlFormatEnabled\030\001 \001(\010B\220" +
      "\001\n1org.wso2.choreo.connect.discovery.con" +
      "fig.enforcerB\tsoapProtoP\001ZNgithub.com/en" +
      "voyproxy/go-control-plane/wso2/discovery" +
      "/config/enforcer;enforcerb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_wso2_discovery_config_enforcer_Soap_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_wso2_discovery_config_enforcer_Soap_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_wso2_discovery_config_enforcer_Soap_descriptor,
        new java.lang.String[] { "SoapErrorXmlFormatEnabled", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
